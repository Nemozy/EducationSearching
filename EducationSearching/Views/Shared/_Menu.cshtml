@{
    
    var menus = new[]
                {
                   new { LinkText="На главную", ActionName="Index",ControllerName="Home",Roles="All" },
                   new { LinkText="Контакты", ActionName="Contact",ControllerName="Home",Roles="Administrator" },
                   new { LinkText="Главная", ActionName="Index",ControllerName="Main",Roles="Administrator,Student" },
                };
}

<ul id="menu">
@if (HttpContext.Current.User.Identity.IsAuthenticated && (!(string.IsNullOrEmpty(User.Identity.Name))))
{
    String[] roles = Roles.GetRolesForUser(User.Identity.Name);
    var links = from item in menus
                where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                .Any(x => roles.Contains(x) || x == "All")
                select item;
    foreach (var link in links)
    {
        @: <li> @Html.ActionLink(link.LinkText, link.ActionName,link.ControllerName)</li>
    }
}
else{
    var links = from item in menus
                where item.Roles.Split(new String[]{","},StringSplitOptions.RemoveEmptyEntries)
                .Any(x=>new String[]{"All","Anonymous"}.Contains(x))
                select item;
     foreach ( var link in links){
         @: <li> @Html.ActionLink(link.LinkText, link.ActionName, link.ControllerName)</li>
     }
}
</ul>